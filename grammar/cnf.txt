STATEMENTS -> STATEMENTS STATEMENT | COMPOUNDSTATEMENT
A2 -> newline
SIMPLESTATMENTS -> SIMPLESTATEMENT A2
COMPOUNDSTATEMENT -> DEF | IF | CLASS | FOR | WHILE | WITH
SIMPLESTATEMENT -> VARIABLE A1 | return EKSPRESION | pass | break | continue | T1 BRACKET | I1 DEF | W1 A11 | U1 B11
A1 -> ASSIGN VARVAL | =
ASSIGN -> A1 | ARITMETIK A1
VARIABLE -> variable
VARVAL -> VARVAL B1 | Z1 C1 | variable | number | True | False | BOOLEAN I1 | R1 BOOLEAN | VARVAL J1 | W1 D1 | U1 E1 | STRING F1
B1 -> ARITMETIK VARVAL
Z1 -> ( | VARIABLE Z2
Y1 -> ) | CONDITION Y2
C1 -> VARVAL Y1 | class
VALUE -> number | VARVAL B1 | Z1 C1 | variable | True | False | BOOLEAN I1 | R1 BOOLEAN | VARVAL J1 | W1 D1 | U1 E1 | STRING F1
X1 -> string | E1 X2
W1 -> " | E1 BRACKETFOR
STRING -> W1 D1 | U1 E1 | STRING F1
D1 -> X1 W1 | while
U1 -> ' | Z1 U2
E1 -> X1 U1 | ,
F1 -> ARITMETIK STRING | range
T1 -> print | VARIABLE T2
PRINT -> T1 BRACKET
BRACKET -> Z1 G1 | Z1 H1 | number | VARVAL B1 | Z1 C1 | variable | number | True | False | BOOLEAN I1 | R1 BOOLEAN | VARVAL J1 | W1 D1 | U1 E1 | STRING F1 | VARVAL B1 | Z1 C1 | variable | number | True | False | BOOLEAN I1 | R1 BOOLEAN | VARVAL J1 | W1 D1 | U1 E1 | STRING F1
G1 -> VARIABLE Y1 | in
H1 -> STRING Y1 | for
ARITMETIK -> + | - | * | / | ARITMETIK ARITMETIK | % | ARITMETIK ARITMETIK
RELATION -> and | or | < | > | RELATION A1 | RELATION A1 | S1 A1 | A1 A1
S1 -> ! | VARIABLE S2
BOOLEAN -> True | False | BOOLEAN I1 | R1 BOOLEAN | VARVAL J1
I1 -> RELATION BOOLEAN | raise
R1 -> not | VARIABLE R2
J1 -> RELATION VARVAL | as
Q1 -> if | VARIABLE IMPORT
P1 -> : | BOOL Y1
IF -> Q1 K1 | IF ELIF
K1 -> CONDITION K2 | import
K2 -> P1 BLOCK
O1 -> elif | BOOLEAN Y1
ELIF -> O1 L1 | O1 M1
L1 -> CONDITION L2 | from
L2 -> P1 L3
L3 -> BLOCK ELIF
M1 -> CONDITION M2 | with
M2 -> P1 M3
M3 -> BLOCK ELSE
N1 -> else | P1 BLOCK
ELSE -> N1 N1
CONDITION -> Z1 O1 | Z1 P1 | True | False | BOOLEAN I1 | R1 BOOLEAN | VARVAL J1
BLOCK -> A2 STATEMENTS
WITH -> M1 BLOCKIMPORTSTATEMENT
IMPORTFROM -> L1 Q1
IMPORT -> K1 R1 | K1 VARIABLE
R2 -> J1 VARIABLE
RAISE -> I1 DEF
RETURN -> return VARIABLE | return | return BRACKETFOR
NONE -> None
FOR -> H1 S1 | H1 T1
S2 -> G1 S3
S3 -> STRING S4
S4 -> P1 BLOCK
T2 -> G1 T3
T3 -> RANGE T4
T4 -> P1 BLOCK
RANGE -> F1 U1
U2 -> BRACKETFOR Y1
BRACKETFOR -> number | BRACKETFOR W1 | BRACKETFOR X1 | variable
X2 -> BRACKETFOR X3
X3 -> E1 BRACKETFOR
WHILE -> D1 Y1
Y2 -> P1 BLOCK
CLASS -> C1 Z1
Z2 -> P1 BLOCK
COMMENT -> W1 A11 | U1 B11
A11 -> W1 A12
A12 -> W1 A13
A13 -> VARIABLE A14
A14 -> W1 A15
A15 -> W1 W1
B11 -> U1 B12
B12 -> U1 B13
B13 -> VARIABLE B14
B14 -> U1 B15
B15 -> U1 U1
S0 -> STATEMENTS STATEMENT | COMPOUNDSTATEMENT
